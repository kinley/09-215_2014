/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hotelapplication;

import java.math.BigDecimal;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author DEAkishin
 */
public class RoomSelectionDialog extends javax.swing.JDialog {

    private Statement stmt;

    private int selectedRoom = 0;
    private double selectedRoomPrice;
    private boolean roomIsSelected = false;

    public int getSelectedRoom() {
        return selectedRoom;
    }

    public double getSelectedRoomPrice() {
        return selectedRoomPrice;
    }

    public boolean isRoomSelected() {
        return roomIsSelected;
    }

    /**
     * Creates new form roomSelectionDialog
     *
     * @param parent
     * @param modal
     * @param curdate
     * @param duration
     */
    public RoomSelectionDialog(java.awt.Frame parent, boolean modal, Date curdate, int duration) {
        super(parent, modal);
        initComponents();
        this.stmt = HotelForm.stmt;
        setLocation(150, 150);
        updateRoomsTable(curdate, duration);
        setVisible(true);
    }

    //Запрос - все свободные номера
    private String freeRoomsQuery(java.sql.Date dateBegin, java.sql.Date dateEnd) {
        String query = "SELECT number, floor, type, "
                + "class, view , price FROM rooms, roomtypes, roomclasses, roomviews "
                + "WHERE rooms.type_id = roomtypes.id "
                + "AND rooms.class_id = roomclasses.id "
                + "AND rooms.view_id = roomviews.id";

        //условие незабронированности номера
        query += " AND (SELECT count(id) FROM reservations WHERE room_number=rooms.number AND "
                + "NOT(('" + dateBegin + "'<date_begin AND '" + dateEnd + "'<date_begin) OR "
                + "('" + dateBegin + "'>date_end AND '" + dateEnd + "'>date_end)))=0";

        //условие незанятости номера
        query += " AND (SELECT count(id) FROM registrations "
                + "WHERE room_number=rooms.number AND archived=false)=0";

        query += " ORDER BY number";

        return query;
    }

    private void updateRoomsTable(Date curdate, int duration) {
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(curdate);
        calendar.add(Calendar.DAY_OF_MONTH, duration - 1);
        Date endDate = calendar.getTime();
        String[] columnNames = {"номер", "этаж", "тип", "вид", "класс", "цена"};
        try {
            ResultSet results;
            results = stmt.executeQuery(freeRoomsQuery(new java.sql.Date(curdate.getTime()),
                    new java.sql.Date(endDate.getTime())));
            roomsTable.setModel(new MyTableModel(results, columnNames));
            results.close();
        } catch (SQLException ex) {
            Logger.getLogger(TablesPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        roomsTable = new javax.swing.JTable();
        selectButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Выбор комнаты");

        roomsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        roomsTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        roomsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                roomsTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(roomsTable);

        selectButton.setText("Выбрать");
        selectButton.setEnabled(false);
        selectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Отмена");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(selectButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectButton)
                    .addComponent(cancelButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void roomsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_roomsTableMouseClicked
        selectButton.setEnabled(true);
    }//GEN-LAST:event_roomsTableMouseClicked

    private void selectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectButtonActionPerformed
        int row = roomsTable.getSelectedRow();
        selectedRoom = Integer.parseInt((String) roomsTable.getModel().getValueAt(row, 0));
        //selectedRoomPrice = new BigDecimal(
        //      (String) roomsTable.getModel().getValueAt(row, 5));
        selectedRoomPrice = Double.parseDouble(
                (String) roomsTable.getModel().getValueAt(row, 5));
        roomIsSelected = true;
        this.dispose();
    }//GEN-LAST:event_selectButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable roomsTable;
    private javax.swing.JButton selectButton;
    // End of variables declaration//GEN-END:variables
}
